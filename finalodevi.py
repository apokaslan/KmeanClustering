# -*- coding: utf-8 -*-
"""FinalOdevi.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NPlfhbrBgNwtVILMcZHHXMUBBMoaP5RE
"""

#Odevler Colab uzerinden yapilmistir 
#Abdullah Kılıçaslan   2018280085

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import random as rd
import matplotlib.pyplot as plt
from math import sqrt
from scipy.sparse import*

# csv verilerinin alınması 
data= pd.read_csv("/Final-data.csv")
data

#Veri görsellestirme icin 2 deger giriyorum x ekseni a1 sectim y eksenini a3
X = data[["a1", "a3"]]

plt.scatter(X["a1"], X["a3"], c="blue")
plt.xlabel("a1")
plt.ylabel("a3")
plt.show()

# küme sayısının secilmesi K degiskeni degistirelerek yapılabilir k = 3 icin 3 merkez atıyor 
K=3

Centroids = (X.sample(n=K))
plt.scatter(X["a1"], X["a3"], c="blue")
plt.scatter(Centroids["a1"], Centroids["a3"], c="red")
plt.xlabel("a1")
plt.ylabel("a3")
plt.show()

diff = 1
j=0

while(diff!=0):
    XD=X
    i=1
    for index1, row_c in Centroids.iterrows():
        ED=[]
        for index2, row_d in XD.iterrows():
            d1 = (row_c["a1"]-row_d["a1"])**2
            d2 = (row_c["a3"]-row_d["a3"])**2
            d = sqrt(d1+d2)
            ED.append(d)
        X[i] = ED
        i = i+1
    
    C = []
    for index, row in X.iterrows():
        min_dist=row[1]
        pos=1
        for i in range(K):
            if row[i+1] < min_dist:
                min_dist = row[i+1]
                pos = i+1
        C.append(pos)
    X["Cluster"]=C
    Centroids_new = X.groupby(["Cluster"]).mean()[["a1", "a3"]]
    if j == 0:
        diff = 1
        j = j+1
    else:
        diff = (Centroids_new['a3'] - Centroids['a3']).sum() + (Centroids_new['a1'] - Centroids['a1']).sum()
        print(diff.sum())
    Centroids = X.groupby(["Cluster"]).mean()[["a3","a1"]]

#Görselleşmiş verinin renkleri satır ve sütun adı aynı zamanda tüm verilerin döndürülmesi
color=['blue','green','cyan']
for k in range(K):
    data=X[X["Cluster"]==k+1]
    plt.scatter(data["a1"],data["a3"],c=color[k])
plt.scatter(Centroids["a1"],Centroids["a3"],c='red')
plt.xlabel('a')
plt.ylabel('veri')
plt.show()



